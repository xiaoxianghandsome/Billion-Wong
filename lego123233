# 导入所需的模块
import PySimpleGUI as sg
from PIL import Image
from skimage import color, transform
from sklearn import metrics
import colorgram

# 定义乐高艺术产品的尺寸和颜色数目
lego_size = (48, 48)
lego_colors = 9

# 定义一个函数来转换相片为像素画
def convert_photo(photo_path, lego_path):
    # 读取相片和乐高艺术产品的图片
    photo = Image.open(photo_path)
    lego = Image.open(lego_path)

    # 将相片转换为灰度图像
    photo_gray = photo.convert("L")

    # 将相片缩小为乐高艺术产品的尺寸
    photo_small = photo_gray.resize(lego_size)

    # 将相片转换为LAB颜色空间
    photo_lab = color.rgb2lab(photo_small)

    # 从乐高艺术产品中提取主要颜色，并将它们转换为LAB颜色空间
    lego_colors = colorgram.extract(lego, lego_colors)
    lego_lab = [color.rgb2lab([[c.rgb]])[0][0] for c in lego_colors]

    # 计算相片中每个像素点与乐高颜色之间的欧氏距离，并选择最近的颜色作为替代颜色
    photo_new = photo_lab.copy()
    for i in range(photo_new.shape[0]):
        for j in range(photo_new.shape[1]):
            pixel = photo_new[i,j]
            distances = [metrics.pairwise.euclidean_distances([pixel], [c]) for c in lego_lab]
            min_index = distances.index(min(distances))
            photo_new[i,j] = lego_lab[min_index]

    # 将替代后的相片转换为RGB颜色空间，并保存为新的图像
    photo_new = color.lab2rgb(photo_new)
    photo_new = Image.fromarray((photo_new * 255).astype('uint8'))
    photo_new.save("photo_new.jpg")

# 定义GUI布局
layout = [
    [sg.Text("请选择要上传的相片：")],
    [sg.Input(key="-PHOTO-"), sg.FileBrowse()],
    [sg.Text("请选择要使用的乐高艺术产品：")],
    [sg.Radio("The Beatles", "LEGO", key="-BEATLES-", default=True)],

